{
  "name": "DISRUPTIVE TECHNOLOGIES - Gateways",
  "type": "UPLINK",
  "debugMode": true,
  "configuration": {
    "decoder": "/** Helper functions **/\r\n\r\nfunction decodeToString(payload) {\r\n    return String.fromCharCode.apply(String, payload);\r\n}\r\n\r\nfunction decodeToJson(payload) {\r\n    // covert payload to string.\r\n    var str = decodeToString(payload);\r\n\r\n    // parse string to JSON\r\n    var data = JSON.parse(str);\r\n    return data;\r\n}\r\n\r\nfunction addDeviceName(msg){\r\n    var result;\r\n    if(msg.labels.name !== undefined){\r\n        result = msg.labels.name; \r\n    } else if(msg.labels.name === undefined){\r\n        result = msg.event.targetName.substr(38,57);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction addMsgData(msg, newMsg){\r\n    if(msg.event.data.cellularStatus !== undefined){\r\n        newMsg.attributes.msgType = msg.event.eventType;\r\n        newMsg.attributes.signal = msg.event.data.cellularStatus.signalStrength;\r\n    } else if(msg.event.data.ethernetStatus !== undefined){\r\n        newMsg.attributes.msgType = msg.event.eventType;\r\n    } else if(msg.event.data.connectionStatus !== undefined){\r\n        newMsg.attributes.msgType = msg.event.eventType;\r\n        newMsg.attributes.connection = msg.event.data.connectionStatus.connection;\r\n        if(msg.event.data.connectionStatus.connection === \"OFFLINE\"){\r\n            newMsg.attributes.indicator = \"OFF\";\r\n        }\r\n    }\r\n    return newMsg;\r\n}\r\n\r\nfunction dateToLocalUnixTimestamp(timestamp){\r\n    var dateWithoutMilliseconds = timestamp.substr(0, 19);\r\n    var localUnixTimeStamp = +new Date(dateWithoutMilliseconds);\r\n    return localUnixTimeStamp;\r\n}\r\n\r\nfunction dateToLocalDate(timestamp){\r\n    var localUnixTimeStamp = dateToLocalUnixTimestamp(timestamp);\r\n    var localDate = timeConverter(localUnixTimeStamp);\r\n    return localDate;\r\n}\r\n\r\n// function timeConverter(UNIX_timestamp){\r\n//   var a = new Date(UNIX_timestamp);\r\n//   var months = ['Janvier','Févier','Mars','Avril','Mai','Juin','Juillet','Août','Septembre','Octobre','Novembre','Décembre'];\r\n//   var days = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\r\n//   var year = a.getFullYear();\r\n//   var month = months[a.getMonth()];\r\n//   var day = days[a.getDay()];\r\n//   var date = a.getDate() < 10 ? '0' + a.getDate() : a.getDate();\r\n//   var hour = a.getHours() < 10 ? '0' + a.getHours() : a.getHours();\r\n//   var min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\r\n//   var sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\r\n//   var time = day + ' ' + date + ' ' + month + ' ' + year + ' - ' + hour + ':' + min + ':' + sec ;\r\n//   return time;\r\n// }\r\n\r\nfunction timeConverter(UNIX_timestamp) {\r\n  var a = new Date(UNIX_timestamp);\r\n  var year = a.getFullYear();\r\n  var month = (a.getMonth() + 1) < 10 ? '0' + (a.getMonth() + 1) : (a.getMonth() + 1);\r\n  var date = a.getDate() < 10 ? '0' + a.getDate() : a.getDate();\r\n  var hour = a.getHours() < 10 ? '0' + a.getHours() : a.getHours();\r\n  var min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes();\r\n  var sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds();\r\n//   var time = `${year}/${month}/${date} - ${hour}:${min}:${sec}`;\r\n  var time = year + '/' + month + '/' + date + ' - ' + hour + ':' + min + ':' + sec;\r\n  return time;\r\n}\r\n\r\nfunction createPayload(msg){\r\n    var newMsg = {\r\n        \"deviceName\": addDeviceName(msg),\r\n        \"deviceType\": \"Gateway\",\r\n        \"attributes\": {\r\n            \"deviceId\": msg.event.targetName.substr(38,57),\r\n            \"indicator\": \"ON\",\r\n            \"lastMessage\": dateToLocalDate(msg.event.timestamp),\r\n            \"ts\": dateToLocalUnixTimestamp(msg.event.timestamp)\r\n        }\r\n    };\r\n    addMsgData(msg, newMsg);\r\n    return newMsg;\r\n}\r\n\r\n/** Decoder **/\r\n\r\nvar data = decodeToJson(payload);\r\n\r\nvar result = createPayload(data);\r\n\r\nreturn result;"
  },
  "additionalInfo": {
    "description": ""
  }
}